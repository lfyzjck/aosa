---
layout: default
title: Mercurial
---

# Dirkjan Ochtman


Mercurial是一个现代的分布式版本控制软件（VCS），主要用Python编写，少部分为提高性能采用C编写。在这一章，我将讨论与设计Mercurial算法和数据结构相关的一些选择。首先，让我简单介绍一下版本控制系统的历史，来引入必要的背景。


## 版本控制简史

尽管本章主要讨论Mercurial的软件架构，很多概念和别的版本控制系统是相同。为了更好地讨论Mercurial，首先，我来举一些版本控制系统的概念和功能的名称。To put all of this in perspective, 我也将简单地介绍这个领域的历史。


版本控制系统设计用来帮助开发人员同时开发同一个软件系统。没有版本控制系统，开发人员只能相互交换完整的拷贝，并自行维护文件修改记录。我们用文件树来抽象软件的源代码。版本控制的一个主要功能就是分发文件树的变更。一个基本的周期就像这样：

   1. 从别人那里获取最新的文件树
   2. 对这个版本的文件树作一组变更
   3. 发布变更，这样别人就可以获取到了


第一个功能，得到本地文件树，叫做签出。存储我们获取、提交的变更的叫仓库，而签出的结果叫工作目录、工作树或工作拷贝。从仓库的最新文件更新本地拷贝就叫更新，有时候这需要合并，即合并不同用户对同一文件的修改。你可以用diff命令来检查一个文件树或者文件的两次修订之间的变更情况。最常用来检查你的工作拷贝里的本地（未发布的）变更。用提交命令可以发布变更，这会把工作目录中的变更保存到仓库。


### 集中式版本控制


### 分布式版本控制


## 数据结构





